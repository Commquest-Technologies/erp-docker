version: '3.9'

services:
  agent:
    image: portainer/agent:latest
    environment:
      - AGENT_CLUSTER_ADDR=tasks.agent
      - AGENT_CLUSTER_CONTROL=1
      - TZ=Africa/Johannesburg
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/volumes:/var/lib/docker/volumes:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - agent-network
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux
      resources:
        limits:
          memory: 128M
      restart_policy:
        condition: any
        delay: 5s
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9001"]
      interval: 10s
      timeout: 5s
      retries: 3

  portainer:
    image: portainer/portainer-ce:latest
    command: -H tcp://tasks.agent:9001 --admin-password-file /run/secrets/portainer-pass
    volumes:
      - portainer_data:/data
    environment:
      - TZ=Africa/Johannesburg
    networks:
      - agent-network
      - traefik-public
    secrets:
      - portainer-pass
    deploy:
      placement:
        constraints:
          - node.role == manager
          - node.labels.portainer.portainer-data == true
      replicas: 1
      resources:
        limits:
          memory: 256M
      labels:
        # Traefik 3.x compatible labels
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        
        # HTTP Router configuration
        - traefik.http.routers.portainer.rule=Host(`${PORTAINER_DOMAIN}`)
        - traefik.http.routers.portainer.entrypoints=websecure
        - traefik.http.routers.portainer.service=portainer-service
        - traefik.http.routers.portainer.tls=true
        - traefik.http.routers.portainer.tls.certresolver=le
        
        # Service configuration
        - traefik.http.services.portainer-service.loadbalancer.server.port=9000
        - traefik.http.services.portainer-service.loadbalancer.server.scheme=http
        
        # Middleware for security
        - traefik.http.routers.portainer.middlewares=portainer-security
        - traefik.http.middlewares.portainer-security.headers.sslredirect=true
        - traefik.http.middlewares.portainer-security.headers.stsSeconds=31536000
        - traefik.http.middlewares.portainer-security.headers.forceSTSHeader=true

networks:
  agent-network:
    driver: overlay
    attachable: true
    driver_opts:
      encrypted: "true"
  traefik-public:
    external: true

volumes:
  portainer_data:
    driver: local
    driver_opts:
      type: none
      device: ${PORTAINER_DATA_PATH:-/var/lib/portainer}
      o: bind

secrets:
  portainer-pass:
    external: true